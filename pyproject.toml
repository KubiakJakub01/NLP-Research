[tool.poetry]
name = "nlp_research"
version = "0.1.0"
description = "NLP Research"
authors = ["KubiakJakub01 <kubiak.jakub01@gmail.com>"]
readme = "README.md"

[tool.poetry-exec-plugin.commands]
ruff = "ruff check nlp"
mypy = "mypy --ignore-missing-imports nlp_research"
pylint = "pylint --rcfile pyproject.toml nlp_research"

[tool.poetry.dependencies]
python = "^3.10"
coloredlogs = "15.0.1"
datasets = "2.14.5"
einops = "0.6.1"
stubs = "1.0.0"
transformers = "4.37.1"
torch = {version = "2.2.0+cu118", source = "torch"}
torchaudio = {version = "2.2.0+cu118", source = "torch"}
pesq = "^0.0.4"
pystoi = "^0.4.1"

[tool.poetry.group.dev.dependencies]
mypy = "1.5.1"
ruff = "0.2.1"
pre-commit = "3.6.0"
pylint = "2.17.5"

[[tool.poetry.source]]
name = "PyPI"
priority = "default"

[[tool.poetry.source]]
name = "torch"
url = "https://download.pytorch.org/whl/cu118"
priority = "supplemental"

[tool.pylint]
max-line-length = 100
disable = ["missing-docstring",
            "invalid-name",
            "too-many-instance-attributes",
            "too-many-arguments",
            "method-hidden",
            "too-many-locals",
            "consider-using-from-import",
            "relative-beyond-top-level",
            "too-many-ancestors"]
fail-under = 10.0
generated-members=["numpy.*","torch.*"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 100
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
